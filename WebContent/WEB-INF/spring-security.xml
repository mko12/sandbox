<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="true" use-expressions="true" access-denied-page="/ihelp/auth/denied" >
	
		<security:intercept-url pattern="/ihelp/auth/login" access="permitAll"/>
		<security:intercept-url pattern="/ihelp/user/users" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/ihelp/card/cards" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
		
		<security:form-login
				login-page="/ihelp/auth/login" 
				authentication-failure-url="/ihelp/auth/login?error=true" 
				default-target-url="/ihelp/card/cards"/>
			
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/ihelp/auth/login" 
				logout-url="/ihelp/auth/logout"/>
	
	</security:http>
	
	<!-- Declare an authentication-manager to use a custom userDetailsService 
		the column 'enabled' is actually needed-->
	<security:authentication-manager>
	    <security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				
				users-by-username-query="
					select username,password, enabled 
					from users where USERNAME=?" 
				
				authorities-by-username-query="
					select u.username, ur.authority from users u, user_roles ur 
					where u.userid = ur.userid and u.username =?  " 		
			/>   		
	        <security:password-encoder ref="passwordEncoder"/>
	     </security:authentication-provider>     
	</security:authentication-manager>
	
	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
	<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>
</beans>